#!/bin/bash
# Burke Azbill
# Date: 2019-07-05
# Purpose: This script will process and display a summary from the
#          SDDCS_INFO.json file generated by the get-vmc-sddcs-json.sh script
#
# Tags: jq process array
# Helpful URL: https://starkandwayne.com/blog/bash-for-loop-over-json-array-using-jq/
# Make sure that an SDDC ID has been provided:
if [ ${#} -eq 1 ]; then
    if [[ "$1" =~ ("?"|"HELP"|"help")$ ]]; then
      echo -e "Usage: \n  $0 [OUTFILE]"
      exit 1
    elif test -f "$1"; then
      OUTFILE=$1
    else
      echo "The specified file: $1 not found"
      exit 1
    fi
else
  # Default to the SDDCS_INFO.json if no file was specified
  if test -f "SDDCS_INFO.json"; then
    OUTFILE="SDDCS_INFO.json"
  else
    echo "The specified file: SDDCS_INFO.json not found"
    exit 1
  fi
fi


# Confirm that the "jq" CLI is available
type jq > /dev/null 2>&1
if [ $? -eq 1 ]; then
    echo "It does not look like you have jq installed. This script uses jq to parse the JSON output"
    echo "Please install jq https://stedolan.github.io/jq/ in order to proceed"
    exit 1
    # else
    # echo "jq was found!"
fi

for row in $(cat ${OUTFILE} | jq -r '.[] | @base64'); do
  _jq() {
     echo ${row} | base64 --decode | jq -r ${1}
    }
  SDDC_NAME=$(_jq .name)
  SDDC_ID=$(_jq .id)
  SDDC_VERSION=$(_jq .resource_config.sddc_manifest.vmc_version)
  CREATE_DATE=$(_jq .created)
  USER_NAME=$(_jq .user_name)
  DEPLOYMENT_TYPE=$(_jq .resource_config.deployment_type)
  REGION=$(_jq .resource_config.region)
  AVAILABILITY_ZONE=$(_jq .resource_config.agent.availability_zone_info_id)
  INSTANCE_TYPE=$(_jq .resource_config.sddc_manifest.esx_ami.instance_type)
  VPC_CIDR=$(_jq .resource_config.vpc_info.vpc_cidr)
  NSXT=$(_jq .resource_config.nsxt)
  EXPIRATION_DATE=$(_jq .expiration_date)
  POP_IPADDRESS=$(_jq .resource_config.agent.internal_ip)
  VPC_VGW=$(_jq .resource_config.vpc_info.vgw_id)
  echo "================================================="
  cat << EOF
SDDCName: ${SDDC_NAME}
SDDCID: ${SDDC_ID}
Version: ${SDDC_VERSION}
CreateDate: ${CREATE_DATE}
User_Name: ${USER_NAME}
ExpirationDate: ${EXPIRATION_DATE}
DeploymentType: ${DEPLOYMENT_TYPE}
Region: ${REGION}
AvaiabilityZone: ${AVAILABILITY_ZONE}
InstanceType: ${INSTANCE_TYPE}
VpcCIDR: ${VPC_CIDR}
PoPIP: ${POP_IPADDRESS}
NSXT: ${NSXT}
VPC_VGW: ${VPC_VGW}
EOF
done